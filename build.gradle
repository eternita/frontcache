subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
	apply plugin: 'war'
	
    version = '0.4.0-SNAPSHOT'
    group = 'frontcache'
	
    configurations {
		providedCompile
        shellRuntime.extendsFrom runtime
        testIntegrationCompile {
            extendsFrom testCompile
        }
        testIntegrationRuntime {
            extendsFrom testIntegrationCompile, testRuntime
        }
    }

    dependencies {

//      compile         '::'
		
    }
	
    sourceSets {
        main {
            sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir
        }
        testIntegration {
            java.srcDir file('src/test-integration/java')
            resources.srcDir file('src/test-integration/resources')
            sourceSets.testIntegration.output.resourcesDir = sourceSets.testIntegration.output.classesDir
            compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.testIntegrationCompile
            runtimeClasspath = output + compileClasspath + configurations.testIntegrationRuntime
        }
    }
    
    task testIntegration(type: Test, dependsOn: jar) {
        testClassesDir = sourceSets.testIntegration.output.classesDir
        classpath = sourceSets.testIntegration.runtimeClasspath
        systemProperty 'app.env', 'test'
        systemProperty 'jar.path', jar.archivePath
        systemProperty 'echoOut', 'true'
        systemProperty 'echoErr', 'true'
        jvmArgs = ["-Xmx1024m", "-Xms256m",  "-XX:MaxPermSize=512m", "-XX:PermSize=128m"]

		testLogging {
			showStandardStreams = true
		}
		
    }

    build {
        dependsOn testIntegration
    }

    test {
        systemProperty 'echoOut', 'true'
        systemProperty 'echoErr', 'true'

    }        


    repositories {
        mavenLocal()
        mavenCentral()
    }
    
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

project(':frontcache-core') {
    dependencies {
        providedCompile         'javax.servlet:javax.servlet-api:3.1.0'
		providedCompile         'javax.servlet.jsp:jsp-api:2.0'
		
        compile         'org.apache.httpcomponents:httpclient:4.5.1'
        compile         'commons-io:commons-io:2.4'
        compile         'org.apache.commons:commons-collections4:4.1'
        compile         'org.apache.logging.log4j:log4j-api:2.4.1'
        compile         'org.apache.logging.log4j:log4j-core:2.4.1'
    }
}


project(':frontcache-ehcache') {
    dependencies {
        compile project(':frontcache-core')
        compile         'net.sf.ehcache:ehcache:2.10.0'
    }
}


project(':frontcache-web') {
    apply plugin: 'war'
    apply plugin: 'jetty'

    httpPort = 9080
    stopPort = 9081
    stopKey = 'frontcache-web'
    war.baseName = ''

    dependencies {
        compile project(':frontcache-core')
        compile project(':frontcache-ehcache')
		
		providedCompile         'org.eclipse.jetty:jetty-server:9.3.4.RC1'
		providedCompile         'org.eclipse.jetty:jetty-servlet:9.3.4.RC1'
		
    }

}
//jettyRun {
//	def httpConnector = new org.mortbay.jetty.nio.SelectChannelConnector();
//	httpConnector.port = 9080
//	def httpsConnector = new org.mortbay.jetty.security.SslSocketConnector();
//	httpsConnector.port = 9443
//	httpsConnector.keystore = "keystore.jks"
//	httpsConnector.keyPassword = "keystorepwd"
//	httpsConnector.truststore = "cacerts"
//	httpsConnector.trustPassword = "cacertspwd"
//	connectors [httpConnector, httpsConnector]
//}