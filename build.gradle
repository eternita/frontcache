subprojects {
    apply plugin: 'java'
	
    version = '0.4.0-SNAPSHOT'
    group = 'frontcache'
	

    dependencies {
		testCompile 'junit:junit:4.12'
    }
	
    repositories {
        mavenLocal()
        mavenCentral()
    }
    
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

project(':frontcache-core') {
	apply plugin: 'war'

    dependencies {
        providedCompile         'javax.servlet:javax.servlet-api:3.1.0'
		providedCompile         'javax.servlet.jsp:jsp-api:2.0'
		
        compile         'org.apache.httpcomponents:httpclient:4.5.1'
        compile         'commons-io:commons-io:2.4'
        compile         'org.apache.commons:commons-collections4:4.1'
        compile         'org.apache.logging.log4j:log4j-api:2.4.1'
        compile         'org.apache.logging.log4j:log4j-core:2.4.1'
    }
}


project(':frontcache-ehcache') {
    dependencies {
        compile project(':frontcache-core')
        compile         'net.sf.ehcache:ehcache:2.10.0'
    }
}


project(':frontcache-web') {
    apply plugin: 'war'
    apply plugin: 'jetty'

	jettyRun.daemon = true
    httpPort = 9080
    stopPort = 9081
    stopKey = 'frontcache-web'
    war.baseName = ''

    dependencies {
        compile project(':frontcache-core')
        compile project(':frontcache-ehcache')
		
		compile 'net.sourceforge.htmlunit:htmlunit:2.18'
		providedCompile         'org.eclipse.jetty:jetty-server:9.3.4.RC1'
		providedCompile         'org.eclipse.jetty:jetty-servlet:9.3.4.RC1'
		
    }

	sourceSets {
		integrationTest {
			java.srcDir file('src/test-integration/java')
			resources.srcDir file('src/test-integration/resources')
			compileClasspath = sourceSets.main.output + configurations.testRuntime
			runtimeClasspath = output + compileClasspath
		}
	}
	task startFC {
		dependsOn jettyRun
		doLast {
			println "Front Cache started"
		}
	}
	
	task stopFC {
		finalizedBy jettyStop
		doLast {
			println "Front Cache stopped"
		}
	}

	task integrationTest(type: Test) {
		description = 'Runs the integration tests.'
		group = 'verification'
		testClassesDir = sourceSets.integrationTest.output.classesDir
		classpath = sourceSets.integrationTest.runtimeClasspath
		reports.html.destination = file("$reports.html.destination/integration")
		reports.junitXml.destination = file("$reports.junitXml.destination/integration")
		dependsOn startFC
		finalizedBy stopFC
	}
	
	
//	tasks.withType(Test) {
//		testLogging {
//			showStandardStreams = true
//			exceptionFormat 'full'
//		}
//	}
	
	check.dependsOn integrationTest
}
