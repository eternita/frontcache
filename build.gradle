import org.akhikhl.gretty.AppBeforeIntegrationTestTask


buildscript {
	repositories {
	  jcenter()
	}
  
	dependencies {
	  classpath 'org.akhikhl.gretty:gretty:+' // use gretty to run Jetty9 (servlet 3.1.0 container)
	}
  }
  
//ext {
//}

subprojects {
    apply plugin: 'java'
	apply plugin: 'maven'
	
    version = '0.7.14'
    group = 'org.frontcache'
	
	configurations {
		provided
	}
	 
	sourceSets {
		main {
			compileClasspath += configurations.provided
			test.compileClasspath += configurations.provided
			test.runtimeClasspath += configurations.provided
		}

		integrationTest {
			java.srcDir file('src/test-integration/java')
			resources.srcDir file('src/test-integration/resources')
			compileClasspath = sourceSets.main.output + configurations.testRuntime
			runtimeClasspath = output + compileClasspath
		}
	}
	
    dependencies {
		testCompile 'junit:junit:4.12'
    }
	
    repositories {
        mavenLocal()
        mavenCentral()
    }
    
	tasks.withType(Test) {
		testLogging {
			showStandardStreams = true
			exceptionFormat 'full'
		}
	}
	
	test {
		reports.html.destination = file("$reports.html.destination/unit")
		reports.junitXml.destination = file("$reports.junitXml.destination/unit")
		
		if (System.getProperty('DEBUG', 'false') == 'true') {
			jvmArgs '-Xdebug',
				'-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8001'
		}
	}
	
	task integrationTest(type: Test) {
		description = 'Runs the integration tests.'
		group = 'verification'
		maxParallelForks = 1 // run all tests sequentially (due to cache cleanup befor every test)
		forkEvery = 1 // run all tests sequentially (due to cache cleanup befor every test)
		testClassesDir = sourceSets.integrationTest.output.classesDir
		classpath = sourceSets.integrationTest.runtimeClasspath
		reports.html.destination = file("$reports.html.destination/integration")
		reports.junitXml.destination = file("$reports.junitXml.destination/integration")
		
//		if (System.getProperty('DEBUG', 'false') == 'true') {
//			jvmArgs '-Xdebug',
//				'-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8002'
//		}
	}
	
	uploadArchives {
		repositories {
			mavenDeployer {
				repository(url: mavenLocalRepo)
			}
		}
	}

}


task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}


project(':frontcache-core') {
	
    dependencies {
        provided        'javax.servlet:javax.servlet-api:3.1.0'
		provided        'javax.servlet.jsp:jsp-api:2.0'
		
		compile 		'com.fasterxml.jackson.core:jackson-databind:2.1.2'
		compile         'com.fasterxml.jackson.core:jackson-annotations:2.1.2'		
        compile         'org.apache.httpcomponents:httpclient:4.5.1'
        compile         'commons-io:commons-io:2.4'
        compile         'ch.qos.logback:logback-classic:1.1.3'
		compile         'com.netflix.hystrix:hystrix-core:1.5.2'
		compile         'com.netflix.hystrix:hystrix-metrics-event-stream:1.5.2'
    }
	
	build.dependsOn uploadArchives	
}


project(':frontcache-ehcache') {
    dependencies {
        compile project(':frontcache-core')
        compile         'net.sf.ehcache:ehcache:2.10.0'
    }
	
	build.dependsOn uploadArchives
}

project(':frontcache-client') {
	dependencies {
		compile project(':frontcache-core')
	}
	
	build.dependsOn uploadArchives
}

project(':frontcache-web') {
	apply plugin: 'war'
	
	dependencies {
		compile project(':frontcache-core')
		compile project(':frontcache-ehcache')
		
//		provided        'javax.servlet:javax.servlet-api:3.1.0'
	}
}

project(':frontcache-console') {
	apply plugin: 'war'
	apply plugin: 'org.akhikhl.gretty'
	
	gretty {
		jvmArgs = ['-Dorg.frontcache.console.config=' + projectDir +'/config/frontcache-console.properties']
	}
	
	dependencies {
		compile project(':frontcache-core')
		compile project(':frontcache-client')
		
        provided        'javax.servlet:javax.servlet-api:3.1.0'
//		provided        'javax.servlet.jsp:jsp-api:2.0'
		
		compile 'net.sourceforge.htmlunit:htmlunit:2.18'
		compile 'jstl:jstl:1.2'

//		compile 'ch.qos.logback:logback-classic:1.1.3'
		compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
//		compile 'javax.servlet:jstl:1.2'
	
		provided 'junit:junit:4.12' // for common tests
	}
	
	check {
		dependsOn integrationTest
	}
}


project(':frontcache-filter-tests') {
    apply plugin: 'war'
	apply plugin: 'org.akhikhl.gretty'

	gretty {
		port = 9080		
		contextPath = '/'
		servletContainer = 'jetty9' // jetty9 or tomcat7 or tomcat8
		integrationTestTask = 'integrationTest' // existing gradle task (it will be surrounded with start/stop)
		jvmArgs = ['-Dfrontcache.home=' + projectDir +'/FRONTCACHE_HOME', '-Dlogback.configurationFile=' + projectDir +'/FRONTCACHE_HOME/conf/fc-logback.xml']
		if (System.getProperty('DEBUG', 'false') == 'true') {
			jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8003', '-Dfrontcache.home=' + projectDir +'/FRONTCACHE_HOME','-Dlogback.configurationFile=' + projectDir +'/FRONTCACHE_HOME/conf/fc-logback.xml']
		}
	}
	
    dependencies {
        compile project(':frontcache-core')
        compile project(':frontcache-client')
//		compile project(':frontcache-ehcache') - no persistence cache for tests
		
		compile 'net.sourceforge.htmlunit:htmlunit:2.18'
		compile 'jstl:jstl:1.2'
		
		provided 'junit:junit:4.12' // for common tests		
    }
	
	check {
		dependsOn integrationTest
	}
	
}

// run Frontcache in embedded Jetty (localhost:9080)
// run test web app using Gretty (localhost:8080)
// run integration test -> frontcache(:9080) -> webapp(:8080)
project(':frontcache-standalone-tests') {
	apply plugin: 'war'
	apply plugin: 'org.akhikhl.gretty'

	gretty {
		port = 8080
		contextPath = '/'
		servletContainer = 'jetty9' // jetty9 or tomcat7 or tomcat8
		integrationTestTask = 'integrationTest' // existing gradle task (it will be surrounded with start/stop)
//		if (System.getProperty('DEBUG', 'false') == 'true') {
//			jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8003']
//		}
	}
	
	integrationTest{
		jvmArgs '-Dfrontcache.standalone.frontcache.web.dir=' + projectDir + '/src/test-integration/webapp',
				'-Dfrontcache.home=' + projectDir + '/FRONTCACHE_HOME',
				'-Dlogback.configurationFile=' + projectDir +'/FRONTCACHE_HOME/conf/fc-logback.xml'
	}

	dependencies {
		compile project(':frontcache-core')
		compile project(':frontcache-filter-tests') // for common tests
//		compile project(':frontcache-ehcache') - no persistence cache for tests
		
		compile 'net.sourceforge.htmlunit:htmlunit:2.18'
		compile 'org.eclipse.jetty:jetty-server:9.3.6.v20151106'
		compile 'org.eclipse.jetty:jetty-webapp:9.3.6.v20151106'
		compile 'jstl:jstl:1.2'
	}

	check {
		dependsOn integrationTest
	}
	
}


